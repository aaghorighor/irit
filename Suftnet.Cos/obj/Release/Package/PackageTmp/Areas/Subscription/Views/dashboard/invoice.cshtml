
@using Suftnet.Cos.Extension

@model Suftnet.Cos.Web.StripeAdapterModel

<div class="slim-mainpanel">
    <div class="container">
        <div class="slim-pageheader">
            <ol class="breadcrumb slim-breadcrumb">
                <li class="breadcrumb-item"><a href="@Url.Action("index","dashboard", new { area ="Subscription" } )">Dashboard</a></li>             
                <li class="breadcrumb-item active" aria-current="page">Invoice</li>
            </ol>
            <h6 class="slim-pagetitle">Invoice</h6>
        </div><!-- slim-pageheader -->
    
        <div class="card card-invoice">
            <div class="card-body">
                <div class="invoice-header">
                    <h1 class="invoice-title">Invoice</h1>
                    <div class="billed-from">
                        <h6>@Model.Settings.Company</h6>
                        <p>
                            @Model.Settings.FullAddress<br>
                            Tel No: @Model.Settings.Telephone<br>
                            Email: @Model.Settings.Email
                        </p>
                    </div><!-- billed-from -->
                </div><!-- invoice-header -->

                <div class="row mg-t-20">
                    <div class="col-md">
                        <label class="section-label-sm tx-gray-500">Bill To</label>
                        <div class="billed-to">
                            <h6 class="tx-gray-800">@Model.Tenant.Name</h6>
                            <p>
                                @Model.Tenant.CompleteAddress <br>
                                Tel No: @Model.Tenant.Mobile<br>
                                Email: @Model.Tenant.Email
                            </p>
                        </div>
                    </div><!-- col -->
                    <div class="col-md">
                        <label class="section-label-sm tx-gray-500"></label>
                        <p class="invoice-info-row">
                            <span>Invoice number</span>
                            <span>@Model.Invoice.Number</span>
                        </p>
                        <p class="invoice-info-row">
                            <span>Status</span>

                            @if (Model.Invoice.Paid == true)
                            {
                                <span>Paid</span>
                            }
                            else
                            {
                                <span>UnPaid</span>
                            }

                        </p>
                        <p class="invoice-info-row">
                            <span>Date of issue:</span>
                            <span>@Model.Invoice.Date.Value.ToString("MMMM dd, yyyy")</span>
                        </p>                       
                    </div><!-- col -->
                </div><!-- row -->

                <div class="table-responsive mg-t-40">
                    <table class="table table-invoice">
                        <thead>
                            <tr>
                                <th class="wd-20p">Service</th>
                                <th class="wd-40p">Period</th>                                                       
                                <th class="tx-right">Amount</th>
                            </tr>
                        </thead>
                        <tbody>

                            @{
                                foreach (var item in Model.Invoice.LineItems)
                                {
                                    <tr>
                                        <td>@item.Plan.Name</td>
                                        <td class="tx-12">@item.Period.Start.Value.ToString("d MMM yyyy") - @item.Period.End.Value.ToString("d MMM yyyy")</td>

                                        @if (item.Amount < 0)
                                        {                                            
                                            var amount = ((long)item.Amount / 100);
                                            <td class="tx-right">@Html.FormatNegativeCurrency(Math.Abs(amount))</td>
                                        }
                                        else
                                        {
                                            <td class="tx-right">@Html.FormatCurrency((decimal)item.Amount / 100)</td>
                                        }

                                    </tr>
                                }
                            }                                                  
                           
                            <tr>
                                <td colspan="2" class="tx-right">Subtotal</td>

                                @{
                                    if (Model.Invoice.Subtotal < 0)
                                    {                                      
                                        var subtotal = ((long)Model.Invoice.Subtotal / 100);
                                        <td colspan="2" class="tx-right">@Html.FormatNegativeCurrency(Math.Abs(subtotal))</td>                                    
                                    }
                                    else
                                    {
                                        <td colspan="2" class="tx-right">@Html.FormatCurrency((decimal)Model.Invoice.Subtotal / 100)</td>
                                    }
                                }
                               
                            </tr>

                            <tr>

                                @{
                                    if (Model.Invoice.Tax < 0)
                                    {
                                        <td colspan="2" class="tx-right">Tax (@Model.Invoice.TaxPercent %)</td>
                                                                              
                                        var tax = ((long)Model.Invoice.Tax / 100);                                       
                                        <td colspan="2" class="tx-right">@Html.FormatNegativeCurrency(Math.Abs(tax))</td>
                                    }
                                    else
                                    {
                                        <td colspan="2" class="tx-right">Tax (@Model.Invoice.TaxPercent %)</td>
                                        <td colspan="2" class="tx-right">@Html.FormatCurrency((decimal)Model.Invoice.Tax / 100)</td>
                                    }
                                }
                               
                            </tr>
                            
                            <tr>
                                <td colspan="2" class="tx-right tx-uppercase tx-bold tx-inverse">Total Due</td>

                                @{
                                    if (Model.Invoice.Total < 0)
                                    {
                                        var total = ((long)Model.Invoice.Total/100);
                                        <td colspan="2" class="tx-right"><h4 class="tx-primary tx-bold tx-lato">@Html.FormatNegativeCurrency(Math.Abs(total))</h4></td>                                     
                                    }
                                    else
                                    {
                                        <td colspan="2" class="tx-right"><h4 class="tx-primary tx-bold tx-lato">@Html.FormatCurrency((decimal)Model.Invoice.Total / 100) </h4></td>
                                    }
                                }
                               
                            </tr>
                        </tbody>
                    </table>
                </div><!-- table-responsive -->                   

            </div><!-- card-body -->
        </div><!-- card -->

    </div><!-- container -->
</div><!-- slim-mainpanel -->