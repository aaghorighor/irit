@using Suftnet.Cos.Extension

<form action="@Url.Action("Create", "Order")" method="post" id="orderDeliveryform">

    <div class="forms">

        <input id="DeliveryId" name="DeliveryId" value="0" type="hidden" />
                    
        <input id="addressfrom" name="addressfrom" value="@Url.AddressTo()" type="hidden" />       
        <input id="deliveryRate" name="deliveryRate" value="@Url.DeliveryRate()" type="hidden" />   
        <input id="deliveryLimit" name="deliveryLimit" value="@Url.DeliveryLimit()" type="hidden" />   
        <input id="deliveryUnit" name="deliveryUnit" value="@Url.DeliveryUnit()" type="hidden" />   

        <div class="grid-12-12">
            <label class="forms-lbl">Delivery Address:</label>
            <input type="text" name="DeliveryAddress" id="DeliveryAddress" class="forms-txt  validate[required]" maxlength="250" />
        </div>

        <div class="grid-12-12">

            <ul style="margin-left:0px; margin-top :5px" class="uibutton-group">
                <li><span class="etip"><a class="uibutton icon add normal " id="btnSubmitAddress" title="Submit">Submit</a></span></li>               
            </ul>

        </div>

        <div class="clear"></div>

        <div class="grid-6-12">
            <label class="forms-lbl">Duration:</label>
            <input type="text" name="DeliveryDuration" id="DeliveryDuration" class="forms-txt validate[required]" readonly="readonly" maxlength="50" />
        </div>

        <div class="grid-6-12">
            <label class="forms-lbl">Distance:</label>
            <input type="text" name="DeliveryDistance" id="DeliveryDistance" class="forms-txt validate[required]"  readonly="readonly" maxlength="50" />
        </div>

        <div class="clear"></div>

        <div class="grid-6-12">
            <label class="forms-lbl">Cost:</label>
            <input type="text" name="DeliveryCost" id="DeliveryCost" class="forms-txt validate[required]"  maxlength="9" />
        </div>

        <div class="clear"></div>

        <div class="grid-6-12 ">
            <label class="forms-lbl">FirstName:</label>
            <input type="text" name="FirstName" id="FirstName" class="forms-txt  validate[required]" maxlength="50" />
        </div>

        <div class="grid-6-12 ">
            <label class="forms-lbl">LastName:</label>
            <input type="text" name="LastName" id="LastName" class="forms-txt" maxlength="50" />
        </div>

        <div class="clear"></div>

        <div class="grid-6-12 ">
            <label class="forms-lbl">Mobile:</label>
            <input type="text" name="Mobile" id="Mobile" class="forms-txt" maxlength="50" />
        </div>

        <div class="grid-6-12">
            <label class="forms-lbl">Time : </label>
            <input type="text" name="DeliveryTime" id="DeliveryTime" readonly="readonly" class="forms-txt-date validate[required]" value="1" maxlength="9" />
        </div>

        <div class="clear"></div>
        <div class="grid-6-12">
            <label class="forms-lbl">Date:</label>
            <input type="text" name="DeliveryDate" id="DeliveryDate" readonly="readonly" class="forms-txt-date validate[required]" value="@DateTime.Now.ToShortDateString()" maxlength="9" />
        </div>     
        
        <div class="grid-12-12">
            <ul style="margin-left:0px; margin-top :0px" class="uibutton-group">
                <li><span class="etip"><a class="uibutton icon add normal " id="btnSubmitDeliveryOrder" title="Save Changes">Save Changes</a></span></li>
                <li><span class="etip"><a class="uibutton icon prev normal " id="btnCloseDeliveryOrder" title="Close">Close</a></span></li>
            </ul>
        </div> 

    </div>

</form>

<script type="text/javascript">

    $(function () {

        $("#DeliveryTime").timepicker({
            showOn: "button",
            buttonImage: '@Url.CalendarIcon()' + "calendar.png",
            buttonText: "Open datepicker",
            buttonImageOnly: true
        });
      
        $("#DeliveryDate").datepicker({
            showOn: "button",
            buttonImage: '@Url.CalendarIcon()' + "calendar.png",
            buttonText: "Open datepicker",
            dateFormat: '@Url.DateTimeFormat()',
            buttonImageOnly: true
        });   

        $("#btnCloseDeliveryOrder").click(function (e) {

            e.preventDefault();
            e.stopImmediatePropagation();          

            iuHelper.resetForm("#orderDeliveryform");

            $("#deliveryOrderDialog").dialog("close");
        });

        $("#btnSubmitDeliveryOrder").bind("click", function (e) {

            e.preventDefault();
            e.stopImmediatePropagation();

            if (!suftnet_validation.isValid("orderDeliveryform")) {
                return false;
            }               
          
            $("#orderDeliveryform").append("<input class=\"hide\" id=\"TableId\" name=\"TableId\" value=\"2670\" type=\"hidden\" /> ");
            $("#orderDeliveryform").append("<input class=\"hide\" id=\"OrderTypeId\" name=\"OrderTypeId\" value=" + $("#OrderTypeId").val() + " type=\"hidden\" /> ");
            $("#orderDeliveryform").append("<input class=\"hide\" id=\"StatusId\" name=\"StatusId\" value=" + $("#StatusId").val() + " type=\"hidden\" /> ");         

            js.ajaxPost($("#orderDeliveryform").attr("action"), $("#orderDeliveryform").serialize()).then(function (data) {

                switch (data.flag) {
                    case 1: //// add


                        deliveryViewModel.addDelivery(data.objrow);
                        orderTable.DataTable().fnDraw();                      

                        break;

                    case 2: //// update

                        deliveryViewModel.editDelivery(data.objrow);

                        orderTable.fnUpdate(data.objrow.CreatedOn, parseInt($("#rowindex").val()), 1, false, false);
                        orderTable.fnUpdate(data.objrow.CreatedBy, parseInt($("#rowindex").val()), 2, false, false);
                        orderTable.fnUpdate(data.objrow.OrderType, parseInt($("#rowindex").val()), 3, false, false);
                        orderTable.fnUpdate(data.objrow.Reference, parseInt($("#rowindex").val()), 4, false, false);

                        orderTable.fnUpdate(data.objrow.Time, parseInt($("#rowindex").val()), 5, false, false);
                        orderTable.fnUpdate(data.objrow.Table, parseInt($("#rowindex").val()), 6, false, false);
                        orderTable.fnUpdate(data.objrow.Guests, parseInt($("#rowindex").val()), 7, false, false);
                        orderTable.fnUpdate(data.objrow.Status, parseInt($("#rowindex").val()), 8, false, false);

                        orderTable.fnUpdate(suftnet_grid.formatCurrency(data.objrow.GrandTotal), parseInt($("#rowindex").val()), 9, false, false);
                        orderTable.fnUpdate(suftnet_grid.formatCurrency(data.objrow.Payment), parseInt($("#rowindex").val()), 10, false, false);

                        if (data.objrow.Balance > 0) {
                            orderTable.fnUpdate(suftnet_grid.formatCurrency(data.objrow.Balance), parseInt($("#rowindex").val()), 11, false, false);
                        }

                    default:
                        break;
                }              
            });

            $("#DeliveryId").val(0);

            $("#OrderStatusId").val(0);
            $("#OrderTypeId").val(0);
          
            iuHelper.resetForm("#orderDeliveryform");

            $("#orderDeliveryform").removeClass("hide");

            $("#deliveryOrderDialog").dialog("close");                              

        });

        suftnet_Settings.ClearErrorMessages("#orderDeliveryform");
    });

</script>





